
# parsetabjs.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4504CA9F901E30336F1E3CE4C64829C3'
    
_lr_action_items = {'STRING':([0,1,2,3,4,8,10,11,12,14,15,16,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,78,79,80,82,84,88,89,91,92,93,94,],[1,-26,-27,-25,-4,1,1,1,1,1,-28,1,1,1,-23,1,1,1,1,1,1,1,1,1,1,1,-22,1,1,-29,-11,-12,-13,1,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-13,-24,1,-20,1,-43,-19,1,-14,-16,1,-17,-30,-12,-13,-9,-21,-3,-18,]),'GE':([1,2,3,7,9,15,22,23,37,38,39,41,48,50,55,56,57,58,59,60,61,62,63,64,65,66,68,75,83,84,91,],[-26,-27,-25,-23,24,-28,-23,24,24,24,-29,24,24,24,-39,-34,24,-37,24,-33,24,-35,-32,-40,-38,-31,-24,-43,24,-30,-9,]),'COMMA':([1,2,3,15,22,39,45,48,55,56,57,58,59,60,61,62,63,64,65,66,68,75,84,91,],[-26,-27,-25,-28,-23,-29,72,74,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-24,-43,-30,-9,]),'TRUE':([0,1,2,3,4,8,10,11,12,14,15,16,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,78,79,80,82,84,88,89,91,92,93,94,],[2,-26,-27,-25,-4,2,2,2,2,2,-28,2,2,2,-23,2,2,2,2,2,2,2,2,2,2,2,-22,2,2,-29,-11,-12,-13,2,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-13,-24,2,-20,2,-43,-19,2,-14,-16,2,-17,-30,-12,-13,-9,-21,-3,-18,]),'ANDAND':([1,2,3,7,9,15,22,23,37,38,39,41,48,50,55,56,57,58,59,60,61,62,63,64,65,66,68,75,83,84,91,],[-26,-27,-25,-23,28,-28,-23,28,28,28,-29,28,28,28,-39,-34,28,-37,-41,-33,-36,-35,-32,-40,-38,-31,-24,-43,28,-30,-9,]),'NUMBER':([0,1,2,3,4,8,10,11,12,14,15,16,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,78,79,80,82,84,88,89,91,92,93,94,],[3,-26,-27,-25,-4,3,3,3,3,3,-28,3,3,3,-23,3,3,3,3,3,3,3,3,3,3,3,-22,3,3,-29,-11,-12,-13,3,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-13,-24,3,-20,3,-43,-19,3,-14,-16,3,-17,-30,-12,-13,-9,-21,-3,-18,]),'RPAREN':([1,2,3,15,17,19,22,38,39,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,68,73,75,84,85,87,91,],[-26,-27,-25,-28,-6,-45,-23,68,-29,71,-5,-8,-6,-44,-47,75,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-24,86,-43,-30,-7,-46,-9,]),'DIVIDE':([1,2,3,7,9,15,22,23,37,38,39,41,48,50,55,56,57,58,59,60,61,62,63,64,65,66,68,75,83,84,91,],[-26,-27,-25,-23,31,-28,-23,31,31,31,-29,31,31,31,31,-34,31,31,31,-33,31,-35,31,31,31,31,-24,-43,31,-30,-9,]),'FUNCTION':([0,1,2,3,4,8,10,11,12,14,15,16,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,78,79,80,82,84,88,89,91,92,93,94,],[5,-26,-27,-25,-4,21,21,21,21,21,-28,5,21,21,-23,21,21,21,21,21,21,21,21,21,21,21,-22,21,21,-29,-11,-12,-13,21,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-13,-24,21,-20,21,-43,-19,21,-14,-16,21,-17,-30,-12,-13,-9,-21,-3,-18,]),'RBRACE':([34,51,52,53,54,67,70,76,78,79,80,81,82,88,89,90,91,92,94,],[-22,-11,-12,-13,-15,-13,-20,-19,-14,-16,-15,91,-17,-12,-13,-10,-9,-21,-18,]),'GT':([1,2,3,7,9,15,22,23,37,38,39,41,48,50,55,56,57,58,59,60,61,62,63,64,65,66,68,75,83,84,91,],[-26,-27,-25,-23,33,-28,-23,33,33,33,-29,33,33,33,-39,-34,33,-37,33,-33,33,-35,-32,-40,-38,-31,-24,-43,33,-30,-9,]),'SEMICOLON':([1,2,3,7,9,15,22,34,39,41,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,75,76,78,79,82,83,84,88,89,91,92,94,],[-26,-27,-25,-23,34,-28,-23,-22,-29,70,76,-11,-12,78,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,78,-24,-20,-43,-19,-14,-16,-17,92,-30,-12,78,-9,-21,-18,]),'PLUS':([1,2,3,7,9,15,22,23,37,38,39,41,48,50,55,56,57,58,59,60,61,62,63,64,65,66,68,75,83,84,91,],[-26,-27,-25,-23,36,-28,-23,36,36,36,-29,36,36,36,36,-34,36,36,36,-33,36,-35,-32,36,36,-31,-24,-43,36,-30,-9,]),'IDENTIFIER':([0,1,2,3,4,5,8,10,11,12,13,14,15,16,17,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,46,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,74,75,76,77,78,79,80,82,84,88,89,91,92,93,94,],[7,-26,-27,-25,-4,18,22,22,22,22,40,22,-28,7,45,22,22,-23,7,22,22,22,22,22,22,22,22,22,22,-22,22,22,-29,45,-11,-12,-13,7,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-13,-24,22,-20,45,22,-43,-19,7,-14,-16,7,-17,-30,-12,-13,-9,-21,-3,-18,]),'OROR':([1,2,3,7,9,15,22,23,37,38,39,41,48,50,55,56,57,58,59,60,61,62,63,64,65,66,68,75,83,84,91,],[-26,-27,-25,-23,26,-28,-23,26,26,26,-29,26,26,26,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-24,-43,26,-30,-9,]),'IF':([0,1,2,3,4,15,16,22,23,34,39,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,75,76,77,78,79,80,82,84,88,89,91,92,93,94,],[8,-26,-27,-25,-4,-28,8,-23,8,-22,-29,-11,-12,-13,8,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-13,-24,-20,-43,-19,8,-14,-16,8,-17,-30,-12,-13,-9,-21,-3,-18,]),'LT':([1,2,3,7,9,15,22,23,37,38,39,41,48,50,55,56,57,58,59,60,61,62,63,64,65,66,68,75,83,84,91,],[-26,-27,-25,-23,35,-28,-23,35,35,35,-29,35,35,35,-39,-34,35,-37,35,-33,35,-35,-32,-40,-38,-31,-24,-43,35,-30,-9,]),'LE':([1,2,3,7,9,15,22,23,37,38,39,41,48,50,55,56,57,58,59,60,61,62,63,64,65,66,68,75,83,84,91,],[-26,-27,-25,-23,27,-28,-23,27,27,27,-29,27,27,27,-39,-34,27,-37,27,-33,27,-35,-32,-40,-38,-31,-24,-43,27,-30,-9,]),'VAR':([0,1,2,3,4,15,16,22,23,34,39,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,75,76,77,78,79,80,82,84,88,89,91,92,93,94,],[13,-26,-27,-25,-4,-28,13,-23,13,-22,-29,-11,-12,-13,13,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-13,-24,-20,-43,-19,13,-14,-16,13,-17,-30,-12,-13,-9,-21,-3,-18,]),'LPAREN':([0,1,2,3,4,5,7,8,10,11,12,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,78,79,80,82,84,88,89,91,92,93,94,],[11,-26,-27,-25,-4,17,19,11,11,11,11,11,-28,11,46,11,11,17,19,11,11,11,11,11,11,11,11,11,11,11,-22,11,11,-29,-11,-12,-13,11,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-13,-24,11,-20,11,-43,-19,11,-14,-16,11,-17,-30,-12,-13,-9,-21,-3,-18,]),'NOT':([0,1,2,3,4,8,10,11,12,14,15,16,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,78,79,80,82,84,88,89,91,92,93,94,],[12,-26,-27,-25,-4,12,12,12,12,12,-28,12,12,12,-23,12,12,12,12,12,12,12,12,12,12,12,-22,12,12,-29,-11,-12,-13,12,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-13,-24,12,-20,12,-43,-19,12,-14,-16,12,-17,-30,-12,-13,-9,-21,-3,-18,]),'MOD':([1,2,3,7,9,15,22,23,37,38,39,41,48,50,55,56,57,58,59,60,61,62,63,64,65,66,68,75,83,84,91,],[-26,-27,-25,-23,25,-28,-23,25,25,25,-29,25,25,25,25,-34,25,25,25,-33,25,-35,25,25,25,25,-24,-43,25,-30,-9,]),'EQUALEQUAL':([1,2,3,7,9,15,22,23,37,38,39,41,48,50,55,56,57,58,59,60,61,62,63,64,65,66,68,75,83,84,91,],[-26,-27,-25,-23,30,-28,-23,30,30,30,-29,30,30,30,-39,-34,30,-37,30,-33,-36,-35,-32,-40,-38,-31,-24,-43,30,-30,-9,]),'LBRACE':([1,2,3,15,22,23,37,39,55,56,57,58,59,60,61,62,63,64,65,66,68,71,75,77,84,86,91,],[-26,-27,-25,-28,-23,54,54,-29,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-24,54,-43,54,-30,54,-9,]),'$end':([0,4,6,16,34,42,51,52,53,67,70,76,78,79,82,88,89,91,92,93,94,],[-2,-4,0,-2,-22,-1,-11,-12,-13,-13,-20,-19,-14,-16,-17,-12,-13,-9,-21,-3,-18,]),'WHILE':([0,1,2,3,4,15,16,22,23,34,39,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,75,76,77,78,79,80,82,84,88,89,91,92,93,94,],[10,-26,-27,-25,-4,-28,10,-23,10,-22,-29,-11,-12,-13,10,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-13,-24,-20,-43,-19,10,-14,-16,10,-17,-30,-12,-13,-9,-21,-3,-18,]),'ELSE':([52,91,],[77,-9,]),'TIMES':([1,2,3,7,9,15,22,23,37,38,39,41,48,50,55,56,57,58,59,60,61,62,63,64,65,66,68,75,83,84,91,],[-26,-27,-25,-23,29,-28,-23,29,29,29,-29,29,29,29,29,-34,29,29,29,-33,29,-35,29,29,29,29,-24,-43,29,-30,-9,]),'RETURN':([0,1,2,3,4,15,16,22,23,34,39,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,75,76,77,78,79,80,82,84,88,89,91,92,93,94,],[14,-26,-27,-25,-4,-28,14,-23,14,-22,-29,-11,-12,-13,14,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-13,-24,-20,-43,-19,14,-14,-16,14,-17,-30,-12,-13,-9,-21,-3,-18,]),'FALSE':([0,1,2,3,4,8,10,11,12,14,15,16,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,78,79,80,82,84,88,89,91,92,93,94,],[15,-26,-27,-25,-4,15,15,15,15,15,-28,15,15,15,-23,15,15,15,15,15,15,15,15,15,15,15,-22,15,15,-29,-11,-12,-13,15,-39,-34,-42,-37,-41,-33,-36,-35,-32,-40,-38,-31,-13,-24,15,-20,15,-43,-19,15,-14,-16,15,-17,-30,-12,-13,-9,-21,-3,-18,]),'EQUAL':([7,40,],[20,69,]),'MINUS':([1,2,3,7,9,15,22,23,37,38,39,41,48,50,55,56,57,58,59,60,61,62,63,64,65,66,68,75,83,84,91,],[-26,-27,-25,-23,32,-28,-23,32,32,32,-29,32,32,32,32,-34,32,32,32,-33,32,-35,-32,32,32,-31,-24,-43,32,-30,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'args':([19,74,],[47,87,]),'stmts':([54,80,],[81,90,]),'exp':([0,8,10,11,12,14,16,19,20,23,24,25,26,27,28,29,30,31,32,33,35,36,54,69,74,77,80,],[9,23,37,38,39,41,9,48,50,9,55,56,57,58,59,60,61,62,63,64,65,66,9,83,48,9,9,]),'compoundstmt':([23,37,71,77,86,],[52,67,84,88,93,]),'optsemi':([53,67,89,],[79,82,94,]),'stmt_or_compound':([23,77,],[53,89,]),'sstmt':([0,16,23,54,77,80,],[4,4,51,80,51,80,]),'params':([17,46,72,],[44,44,85,]),'optparams':([17,46,],[43,73,]),'element':([0,16,],[16,16,]),'js':([0,16,],[6,42,]),'optargs':([19,],[49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> js","S'",1,None,None,None),
  ('js -> element js','js',2,'p_js','jsgrammar.py',23),
  ('js -> <empty>','js',0,'p_js_empty','jsgrammar.py',26),
  ('element -> FUNCTION IDENTIFIER LPAREN optparams RPAREN compoundstmt','element',6,'p_element_function','jsgrammar.py',30),
  ('element -> sstmt','element',1,'p_element_stmt','jsgrammar.py',34),
  ('optparams -> params','optparams',1,'p_optparams','jsgrammar.py',38),
  ('optparams -> <empty>','optparams',0,'p_optparams_empty','jsgrammar.py',41),
  ('params -> IDENTIFIER COMMA params','params',3,'p_params','jsgrammar.py',44),
  ('params -> IDENTIFIER','params',1,'p_params_one','jsgrammar.py',47),
  ('compoundstmt -> LBRACE stmts RBRACE','compoundstmt',3,'p_compoundstmt','jsgrammar.py',50),
  ('stmts -> sstmt stmts','stmts',2,'p_stmts','jsgrammar.py',53),
  ('stmt_or_compound -> sstmt','stmt_or_compound',1,'p_stmt_or_compound','jsgrammar.py',57),
  ('stmt_or_compound -> compoundstmt','stmt_or_compound',1,'p_stmt_or_compound_c','jsgrammar.py',60),
  ('optsemi -> <empty>','optsemi',0,'p_optsemi_none','jsgrammar.py',64),
  ('optsemi -> SEMICOLON','optsemi',1,'p_optsemi_some','jsgrammar.py',68),
  ('stmts -> <empty>','stmts',0,'p_stmts_empty','jsgrammar.py',72),
  ('sstmt -> IF exp stmt_or_compound optsemi','sstmt',4,'p_sstmt_if','jsgrammar.py',76),
  ('sstmt -> WHILE exp compoundstmt optsemi','sstmt',4,'p_sstmt_while','jsgrammar.py',79),
  ('sstmt -> IF exp compoundstmt ELSE stmt_or_compound optsemi','sstmt',6,'p_sstmt_if_else','jsgrammar.py',82),
  ('sstmt -> IDENTIFIER EQUAL exp SEMICOLON','sstmt',4,'p_sstmt_assigment','jsgrammar.py',85),
  ('sstmt -> RETURN exp SEMICOLON','sstmt',3,'p_sstmt_return','jsgrammar.py',88),
  ('sstmt -> VAR IDENTIFIER EQUAL exp SEMICOLON','sstmt',5,'p_sstmt_var','jsgrammar.py',91),
  ('sstmt -> exp SEMICOLON','sstmt',2,'p_sstmt_exp','jsgrammar.py',94),
  ('exp -> IDENTIFIER','exp',1,'p_exp_identifier','jsgrammar.py',98),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_paren','jsgrammar.py',101),
  ('exp -> NUMBER','exp',1,'p_exp_number','jsgrammar.py',104),
  ('exp -> STRING','exp',1,'p_exp_string','jsgrammar.py',107),
  ('exp -> TRUE','exp',1,'p_exp_true','jsgrammar.py',110),
  ('exp -> FALSE','exp',1,'p_exp_false','jsgrammar.py',113),
  ('exp -> NOT exp','exp',2,'p_exp_not','jsgrammar.py',116),
  ('exp -> FUNCTION LPAREN optparams RPAREN compoundstmt','exp',5,'p_exp_lambda','jsgrammar.py',119),
  ('exp -> exp PLUS exp','exp',3,'p_exp_binop','jsgrammar.py',122),
  ('exp -> exp MINUS exp','exp',3,'p_exp_binop','jsgrammar.py',123),
  ('exp -> exp TIMES exp','exp',3,'p_exp_binop','jsgrammar.py',124),
  ('exp -> exp MOD exp','exp',3,'p_exp_binop','jsgrammar.py',125),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_binop','jsgrammar.py',126),
  ('exp -> exp EQUALEQUAL exp','exp',3,'p_exp_binop','jsgrammar.py',127),
  ('exp -> exp LE exp','exp',3,'p_exp_binop','jsgrammar.py',128),
  ('exp -> exp LT exp','exp',3,'p_exp_binop','jsgrammar.py',129),
  ('exp -> exp GE exp','exp',3,'p_exp_binop','jsgrammar.py',130),
  ('exp -> exp GT exp','exp',3,'p_exp_binop','jsgrammar.py',131),
  ('exp -> exp ANDAND exp','exp',3,'p_exp_binop','jsgrammar.py',132),
  ('exp -> exp OROR exp','exp',3,'p_exp_binop','jsgrammar.py',133),
  ('exp -> IDENTIFIER LPAREN optargs RPAREN','exp',4,'p_exp_call','jsgrammar.py',136),
  ('optargs -> args','optargs',1,'p_optargs','jsgrammar.py',140),
  ('optargs -> <empty>','optargs',0,'p_optargs_empty','jsgrammar.py',143),
  ('args -> exp COMMA args','args',3,'p_args','jsgrammar.py',146),
  ('args -> exp','args',1,'p_args_one','jsgrammar.py',149),
]
